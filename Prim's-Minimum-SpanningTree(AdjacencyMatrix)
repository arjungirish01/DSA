#include<iostream>
#include<vector>

#define v 6

int findminvertex(std::vector<int>value, std::vector<bool>setmst) {
	int min = INT_MAX;
	int vertex;
	for (int i = 0; i < v; i++) {
		if (value[i] < min && setmst[i]==false) {
			min = value[i];
			vertex = i;
		}
	}
	return vertex;
}

void buildmst(int graph[v][v]) {
	int parent[v];
	std::vector<int>value(v, INT_MAX);
	std::vector<bool>setmst(v, false);
	value[0] = 0;
	parent[0] = -1;

	for (int i = 0; i < v - 1; i++) {
		int u = findminvertex(value, setmst);
		setmst[u] = true;
		for (int j = 0; j < v; j++) {
			if (graph[u][j] != 0 && setmst[j] == false && graph[u][j] < value[j]) {
				value[j] = graph[u][j];
				parent[j] = u;
			}
		}
	}

	//print mst
	for (int i = 1; i < v; i++) {
		std::cout << parent[i] << "-->" << i << " wt:" << value[i];
		std::cout << "\n";
	}
}

int main() {
	int graph[v][v] = { {0,4,6,0,0,0},{4,0,6,3,4,0},{6,6,0,1,8,0},{0,3,1,0,2,3},{0,4,8,2,0,7},{0,0,0,3,7,0} };

	buildmst(graph);
}

